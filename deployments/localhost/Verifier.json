{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_queryAPIAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minorAddress",
          "type": "address"
        }
      ],
      "name": "calculateClaimAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minorAddress",
          "type": "address"
        }
      ],
      "name": "calculatePremium",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minorAddress",
          "type": "address"
        }
      ],
      "name": "isClaimValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queryAPIAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x74767b837c8f6cadf79dd04605b56463527be61e2de164dcb0df6b1befec0eeb",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "420622",
    "logsBloom": "0x
    "blockHash": "0xfb2ea7d22fcde350be2c893cb21f4414dee7318c32e9263f31d4baaa90dccdd2",
    "transactionHash": "0x74767b837c8f6cadf79dd04605b56463527be61e2de164dcb0df6b1befec0eeb",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "420622",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "74d9d5ab34d49ae6c3d80ea24b713993",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_queryAPIAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minorAddress\",\"type\":\"address\"}],\"name\":\"calculateClaimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minorAddress\",\"type\":\"address\"}],\"name\":\"calculatePremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minorAddress\",\"type\":\"address\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryAPIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateClaimAmount(address)\":{\"returns\":{\"_0\":\"bool\"}},\"calculatePremium(address)\":{\"returns\":{\"_0\":\"bool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateClaimAmount(address)\":{\"notice\":\"calculates the claimAmount to be paid based on the miner data\"},\"calculatePremium(address)\":{\"notice\":\"calculates the premium to be paid based on the miner data\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Verifier.sol\":\"Verifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Verifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\nimport \\\"./mocks/InterfaceQueryAPI.sol\\\";\\n\\ninterface IVerifier {\\n    function verifyMinerData() external returns (bool);\\n    function verifyMinorBenificiary() external returns (bool);\\n    function calculatePremium(address _minorAddress) external returns (uint256);\\n    function calculateClaimAmount(address _minorAddress) external returns (uint256);\\n    function isClaimValid(address _minorAddress) external returns (bool);\\n}\\n\\n\\ncontract Verifier{\\n\\n    address public queryAPIAddress;\\n    \\n    constructor(address _queryAPIAddress){\\n        queryAPIAddress = _queryAPIAddress;\\n    }\\n\\n    /**\\n     * @notice Verifies the miner data\\n     * @return bool\\n     */\\n    function verifyMinerData() internal view returns (bool){\\n        IQueryAPI queryAPI = IQueryAPI(queryAPIAddress);\\n        IQueryAPI.minerInfo memory minerInfo = queryAPI.getMinerInfo(msg.sender);\\n        //   TODO : Add the logic to verify the miner data\\n        return true;\\n    }\\n\\n    /**\\n     * @notice calculates the premium to be paid based on the miner data\\n     * @return bool\\n     */\\n    function calculatePremium(address _minorAddress) external view returns (uint256){\\n        // TODO : Add the logic to calculate the premium\\n        return 100 ether;\\n    }\\n\\n    /**\\n     * @notice calculates the claimAmount to be paid based on the miner data\\n     * @return bool\\n     */\\n    function calculateClaimAmount(address _minorAddress) external view returns (uint256){\\n        // TODO : Add the logic to calculate the claim amount\\n        return 1000 ether;\\n    }\\n\\n    /**\\n     * @notice Verifies the minor benificiary\\n     * @return bool\\n     */\\n    function verifyMinorBenificiary() internal view returns (bool){\\n        IQueryAPI queryAPI = IQueryAPI(queryAPIAddress);\\n        return queryAPI.confirmBenificiaryAddress();\\n    }\\n\\n    function isClaimValid(address _minorAddress) external view returns (bool){\\n        // TODO : Add the logic to verify the claim\\n        bool isMinorBenificiary= verifyMinorBenificiary();\\n        bool isMinerDataValid = verifyMinerData();\\n        return isMinorBenificiary && isMinerDataValid;\\n    }\\n}\",\"keccak256\":\"0x4924907b203cbca44b9c6da2b99a24e97ad6e906ddc1c6ec41dafc11606b9f17\",\"license\":\"MIT\"},\"contracts/mocks/InterfaceQueryAPI.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IQueryAPI {\\n    struct minerInfo {\\n        address minerAddress;\\n        uint addressTotalBalance;\\n        uint initialPledge;\\n        uint lockedBlockRewards;\\n        uint activeSectors;\\n        uint faultySectors;\\n        uint recoveredSectors;\\n    }\\n\\n    function confirmBenificiaryAddress() external pure returns (bool);\\n\\n    function getMinerInfo(\\n        address minerAddress\\n    ) external view returns (minerInfo memory);\\n\\n    function mockGenerateMinerInfo(address _minerAddress) external;\\n}\\n\",\"keccak256\":\"0xc2cdfde348b31a9a131f7c47d7b3803193a281f220d599f31bc21b1fdf83bab2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610744380380610744833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61062d806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806316f65d801461005157806374f22010146100815780637b32f4ef146100b1578063a40d1cbd146100cf575b600080fd5b61006b6004803603810190610066919061032a565b6100ff565b6040516100789190610372565b60405180910390f35b61009b6004803603810190610096919061032a565b61012b565b6040516100a891906103a6565b60405180910390f35b6100b961013e565b6040516100c691906103d0565b60405180910390f35b6100e960048036038101906100e4919061032a565b610162565b6040516100f691906103a6565b60405180910390f35b60008061010a610175565b90506000610116610210565b90508180156101225750805b92505050919050565b600068056bc75e2d631000009050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000683635c9adc5dea000009050919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634c7c81d86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610417565b91505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16630b34d553336040518263ffffffff1660e01b815260040161027191906103d0565b60e060405180830381865afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b291906105ca565b905060019250505090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f7826102cc565b9050919050565b610307816102ec565b811461031257600080fd5b50565b600081359050610324816102fe565b92915050565b6000602082840312156103405761033f6102c7565b5b600061034e84828501610315565b91505092915050565b60008115159050919050565b61036c81610357565b82525050565b60006020820190506103876000830184610363565b92915050565b6000819050919050565b6103a08161038d565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6103ca816102ec565b82525050565b60006020820190506103e560008301846103c1565b92915050565b6103f481610357565b81146103ff57600080fd5b50565b600081519050610411816103eb565b92915050565b60006020828403121561042d5761042c6102c7565b5b600061043b84828501610402565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61049282610449565b810181811067ffffffffffffffff821117156104b1576104b061045a565b5b80604052505050565b60006104c46102bd565b90506104d08282610489565b919050565b6000815190506104e4816102fe565b92915050565b6104f38161038d565b81146104fe57600080fd5b50565b600081519050610510816104ea565b92915050565b600060e0828403121561052c5761052b610444565b5b61053660e06104ba565b90506000610546848285016104d5565b600083015250602061055a84828501610501565b602083015250604061056e84828501610501565b604083015250606061058284828501610501565b606083015250608061059684828501610501565b60808301525060a06105aa84828501610501565b60a08301525060c06105be84828501610501565b60c08301525092915050565b600060e082840312156105e0576105df6102c7565b5b60006105ee84828501610516565b9150509291505056fea2646970667358221220b6e4f79dd5a5ab679d89e66cd323e58310434382e8df6d0968670c04f46279c864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806316f65d801461005157806374f22010146100815780637b32f4ef146100b1578063a40d1cbd146100cf575b600080fd5b61006b6004803603810190610066919061032a565b6100ff565b6040516100789190610372565b60405180910390f35b61009b6004803603810190610096919061032a565b61012b565b6040516100a891906103a6565b60405180910390f35b6100b961013e565b6040516100c691906103d0565b60405180910390f35b6100e960048036038101906100e4919061032a565b610162565b6040516100f691906103a6565b60405180910390f35b60008061010a610175565b90506000610116610210565b90508180156101225750805b92505050919050565b600068056bc75e2d631000009050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000683635c9adc5dea000009050919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634c7c81d86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020a9190610417565b91505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16630b34d553336040518263ffffffff1660e01b815260040161027191906103d0565b60e060405180830381865afa15801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b291906105ca565b905060019250505090565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f7826102cc565b9050919050565b610307816102ec565b811461031257600080fd5b50565b600081359050610324816102fe565b92915050565b6000602082840312156103405761033f6102c7565b5b600061034e84828501610315565b91505092915050565b60008115159050919050565b61036c81610357565b82525050565b60006020820190506103876000830184610363565b92915050565b6000819050919050565b6103a08161038d565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6103ca816102ec565b82525050565b60006020820190506103e560008301846103c1565b92915050565b6103f481610357565b81146103ff57600080fd5b50565b600081519050610411816103eb565b92915050565b60006020828403121561042d5761042c6102c7565b5b600061043b84828501610402565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61049282610449565b810181811067ffffffffffffffff821117156104b1576104b061045a565b5b80604052505050565b60006104c46102bd565b90506104d08282610489565b919050565b6000815190506104e4816102fe565b92915050565b6104f38161038d565b81146104fe57600080fd5b50565b600081519050610510816104ea565b92915050565b600060e0828403121561052c5761052b610444565b5b61053660e06104ba565b90506000610546848285016104d5565b600083015250602061055a84828501610501565b602083015250604061056e84828501610501565b604083015250606061058284828501610501565b606083015250608061059684828501610501565b60808301525060a06105aa84828501610501565b60a08301525060c06105be84828501610501565b60c08301525092915050565b600060e082840312156105e0576105df6102c7565b5b60006105ee84828501610516565b9150509291505056fea2646970667358221220b6e4f79dd5a5ab679d89e66cd323e58310434382e8df6d0968670c04f46279c864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "calculateClaimAmount(address)": {
        "returns": {
          "_0": "bool"
        }
      },
      "calculatePremium(address)": {
        "returns": {
          "_0": "bool"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calculateClaimAmount(address)": {
        "notice": "calculates the claimAmount to be paid based on the miner data"
      },
      "calculatePremium(address)": {
        "notice": "calculates the premium to be paid based on the miner data"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1202,
        "contract": "contracts/Verifier.sol:Verifier",
        "label": "queryAPIAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}