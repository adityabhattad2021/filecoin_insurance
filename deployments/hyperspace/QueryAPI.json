{
  "address": "0xBe0F340075060F856612d91e17cAe599dE92C745",
  "abi": [
    {
      "inputs": [],
      "name": "confirmBenificiaryAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "minerID",
          "type": "string"
        }
      ],
      "name": "getMinerInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "minerId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "availableBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPledge",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vestingFunds",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "sector_size",
              "type": "uint64"
            }
          ],
          "internalType": "struct QueryAPI.minerInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "minerInfoMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "minerId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "availableBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialPledge",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "sector_size",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_minorId",
          "type": "string"
        }
      ],
      "name": "mockGenerateMinerInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x90dbcbe21b657a666faffa4abf984d858d4902637653963832d561d309b8df7b",
  "receipt": {
    "to": null,
    "from": "0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f",
    "contractAddress": "0xBe0F340075060F856612d91e17cAe599dE92C745",
    "transactionIndex": 2,
    "gasUsed": "25640808",
    "logsBloom": "0x
    "blockHash": "0xe9b0bd696d775237cabdc476616c2193fe55ea5aecd373cf32e90412213a2b4f",
    "transactionHash": "0x90dbcbe21b657a666faffa4abf984d858d4902637653963832d561d309b8df7b",
    "logs": [],
    "blockNumber": 58240,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "49d4768e6ee06357af2550fe27fffdc1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"confirmBenificiaryAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"minerID\",\"type\":\"string\"}],\"name\":\"getMinerInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"minerId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"availableBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPledge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"sector_size\",\"type\":\"uint64\"}],\"internalType\":\"struct QueryAPI.minerInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"minerInfoMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"minerId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"availableBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPledge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"sector_size\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_minorId\",\"type\":\"string\"}],\"name\":\"mockGenerateMinerInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"confirmBenificiaryAddress()\":{\"returns\":{\"_0\":\"bool\"}},\"getMinerInfo(string)\":{\"params\":{\"minerID\":\"address of the miner\"},\"returns\":{\"_0\":\"minerInfo\"}},\"mockGenerateMinerInfo(string)\":{\"params\":{\"_minorId\":\"address of the miner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"confirmBenificiaryAddress()\":{\"notice\":\"Verifies the minor benificiary\"},\"getMinerInfo(string)\":{\"notice\":\"Gets the miner info\"},\"mockGenerateMinerInfo(string)\":{\"notice\":\"Mocks the miner info\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/QueryAPI.sol\":\"QueryAPI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/QueryAPI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\n// This mock QueryAPI is inspired by MinerAPI by Zondax AG.\\ncontract QueryAPI{\\n    // Structure of data regarding the storage  provider.\\n\\n    // Mocking the data for now\\n    mapping(string => minerInfo) public minerInfoMap;\\n\\n    struct minerInfo{\\n        string minerId;\\n        uint availableBalance;\\n        uint initialPledge;\\n        uint vestingFunds;\\n        uint64 sector_size;\\n    }\\n\\n    /**\\n     * @notice Verifies the minor benificiary\\n     * @return bool\\n     */\\n    function confirmBenificiaryAddress() external pure returns (bool){\\n        // this are hard coded values for testing purposes\\n        return true;\\n    }\\n\\n\\n    /**\\n     * @notice Mocks the miner info\\n     * @param _minorId address of the miner\\n     */\\n    function mockGenerateMinerInfo(string memory _minorId) external {\\n        minerInfoMap[_minorId].minerId = _minorId;\\n        minerInfoMap[_minorId].availableBalance=1000;\\n        minerInfoMap[_minorId].initialPledge = 50;\\n        minerInfoMap[_minorId].vestingFunds =  35;\\n        minerInfoMap[_minorId].sector_size=42;\\n    }\\n\\n\\n    /**\\n     * @notice Gets the miner info\\n     * @param minerID address of the miner\\n     * @return minerInfo\\n     */\\n    function getMinerInfo(string memory minerID) external view returns (minerInfo memory){\\n        return minerInfoMap[minerID];\\n    }\\n\\n}\",\"keccak256\":\"0xd8df34ae235d9bfb196b00baeedd8265d7dde0091fe3ed98a4b04364b54168fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b79806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634c7c81d814610051578063678db93c1461006f5780638ccbaf71146100a3578063fc67b415146100d3575b600080fd5b6100596100ef565b604051610066919061043f565b60405180910390f35b610089600480360381019061008491906105b4565b6100f8565b60405161009a9594939291906106b8565b60405180910390f35b6100bd60048036038101906100b891906105b4565b6101e0565b6040516100ca91906107f0565b60405180910390f35b6100ed60048036038101906100e891906105b4565b6102fa565b005b60006001905090565b60008180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461013190610841565b80601f016020809104026020016040519081016040528092919081815260200182805461015d90610841565b80156101aa5780601f1061017f576101008083540402835291602001916101aa565b820191906000526020600020905b81548152906001019060200180831161018d57829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900467ffffffffffffffff16905085565b6101e86103eb565b6000826040516101f891906108ae565b90815260200160405180910390206040518060a001604052908160008201805461022190610841565b80601f016020809104026020016040519081016040528092919081815260200182805461024d90610841565b801561029a5780601f1061026f5761010080835404028352916020019161029a565b820191906000526020600020905b81548152906001019060200180831161027d57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050919050565b8060008260405161030b91906108ae565b908152602001604051809103902060000190816103289190610a71565b506103e860008260405161033c91906108ae565b908152602001604051809103902060010181905550603260008260405161036391906108ae565b908152602001604051809103902060020181905550602360008260405161038a91906108ae565b908152602001604051809103902060030181905550602a6000826040516103b191906108ae565b908152602001604051809103902060040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b6040518060a0016040528060608152602001600081526020016000815260200160008152602001600067ffffffffffffffff1681525090565b60008115159050919050565b61043981610424565b82525050565b60006020820190506104546000830184610430565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104c182610478565b810181811067ffffffffffffffff821117156104e0576104df610489565b5b80604052505050565b60006104f361045a565b90506104ff82826104b8565b919050565b600067ffffffffffffffff82111561051f5761051e610489565b5b61052882610478565b9050602081019050919050565b82818337600083830152505050565b600061055761055284610504565b6104e9565b90508281526020810184848401111561057357610572610473565b5b61057e848285610535565b509392505050565b600082601f83011261059b5761059a61046e565b5b81356105ab848260208601610544565b91505092915050565b6000602082840312156105ca576105c9610464565b5b600082013567ffffffffffffffff8111156105e8576105e7610469565b5b6105f484828501610586565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561063757808201518184015260208101905061061c565b60008484015250505050565b600061064e826105fd565b6106588185610608565b9350610668818560208601610619565b61067181610478565b840191505092915050565b6000819050919050565b61068f8161067c565b82525050565b600067ffffffffffffffff82169050919050565b6106b281610695565b82525050565b600060a08201905081810360008301526106d28188610643565b90506106e16020830187610686565b6106ee6040830186610686565b6106fb6060830185610686565b61070860808301846106a9565b9695505050505050565b600082825260208201905092915050565b600061072e826105fd565b6107388185610712565b9350610748818560208601610619565b61075181610478565b840191505092915050565b6107658161067c565b82525050565b61077481610695565b82525050565b600060a08301600083015184820360008601526107978282610723565b91505060208301516107ac602086018261075c565b5060408301516107bf604086018261075c565b5060608301516107d2606086018261075c565b5060808301516107e5608086018261076b565b508091505092915050565b6000602082019050818103600083015261080a818461077a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085957607f821691505b60208210810361086c5761086b610812565b5b50919050565b600081905092915050565b6000610888826105fd565b6108928185610872565b93506108a2818560208601610619565b80840191505092915050565b60006108ba828461087d565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109277fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108ea565b61093186836108ea565b95508019841693508086168417925050509392505050565b6000819050919050565b600061096e6109696109648461067c565b610949565b61067c565b9050919050565b6000819050919050565b61098883610953565b61099c61099482610975565b8484546108f7565b825550505050565b600090565b6109b16109a4565b6109bc81848461097f565b505050565b5b818110156109e0576109d56000826109a9565b6001810190506109c2565b5050565b601f821115610a25576109f6816108c5565b6109ff846108da565b81016020851015610a0e578190505b610a22610a1a856108da565b8301826109c1565b50505b505050565b600082821c905092915050565b6000610a4860001984600802610a2a565b1980831691505092915050565b6000610a618383610a37565b9150826002028217905092915050565b610a7a826105fd565b67ffffffffffffffff811115610a9357610a92610489565b5b610a9d8254610841565b610aa88282856109e4565b600060209050601f831160018114610adb5760008415610ac9578287015190505b610ad38582610a55565b865550610b3b565b601f198416610ae9866108c5565b60005b82811015610b1157848901518255600182019150602085019450602081019050610aec565b86831015610b2e5784890151610b2a601f891682610a37565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220f093d946b73b5fa6feb3f5688d8bbaf5ce8e5eba4700f8e6f2a2eaac716e0a7864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80634c7c81d814610051578063678db93c1461006f5780638ccbaf71146100a3578063fc67b415146100d3575b600080fd5b6100596100ef565b604051610066919061043f565b60405180910390f35b610089600480360381019061008491906105b4565b6100f8565b60405161009a9594939291906106b8565b60405180910390f35b6100bd60048036038101906100b891906105b4565b6101e0565b6040516100ca91906107f0565b60405180910390f35b6100ed60048036038101906100e891906105b4565b6102fa565b005b60006001905090565b60008180516020810182018051848252602083016020850120818352809550505050505060009150905080600001805461013190610841565b80601f016020809104026020016040519081016040528092919081815260200182805461015d90610841565b80156101aa5780601f1061017f576101008083540402835291602001916101aa565b820191906000526020600020905b81548152906001019060200180831161018d57829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900467ffffffffffffffff16905085565b6101e86103eb565b6000826040516101f891906108ae565b90815260200160405180910390206040518060a001604052908160008201805461022190610841565b80601f016020809104026020016040519081016040528092919081815260200182805461024d90610841565b801561029a5780601f1061026f5761010080835404028352916020019161029a565b820191906000526020600020905b81548152906001019060200180831161027d57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509050919050565b8060008260405161030b91906108ae565b908152602001604051809103902060000190816103289190610a71565b506103e860008260405161033c91906108ae565b908152602001604051809103902060010181905550603260008260405161036391906108ae565b908152602001604051809103902060020181905550602360008260405161038a91906108ae565b908152602001604051809103902060030181905550602a6000826040516103b191906108ae565b908152602001604051809103902060040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b6040518060a0016040528060608152602001600081526020016000815260200160008152602001600067ffffffffffffffff1681525090565b60008115159050919050565b61043981610424565b82525050565b60006020820190506104546000830184610430565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104c182610478565b810181811067ffffffffffffffff821117156104e0576104df610489565b5b80604052505050565b60006104f361045a565b90506104ff82826104b8565b919050565b600067ffffffffffffffff82111561051f5761051e610489565b5b61052882610478565b9050602081019050919050565b82818337600083830152505050565b600061055761055284610504565b6104e9565b90508281526020810184848401111561057357610572610473565b5b61057e848285610535565b509392505050565b600082601f83011261059b5761059a61046e565b5b81356105ab848260208601610544565b91505092915050565b6000602082840312156105ca576105c9610464565b5b600082013567ffffffffffffffff8111156105e8576105e7610469565b5b6105f484828501610586565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561063757808201518184015260208101905061061c565b60008484015250505050565b600061064e826105fd565b6106588185610608565b9350610668818560208601610619565b61067181610478565b840191505092915050565b6000819050919050565b61068f8161067c565b82525050565b600067ffffffffffffffff82169050919050565b6106b281610695565b82525050565b600060a08201905081810360008301526106d28188610643565b90506106e16020830187610686565b6106ee6040830186610686565b6106fb6060830185610686565b61070860808301846106a9565b9695505050505050565b600082825260208201905092915050565b600061072e826105fd565b6107388185610712565b9350610748818560208601610619565b61075181610478565b840191505092915050565b6107658161067c565b82525050565b61077481610695565b82525050565b600060a08301600083015184820360008601526107978282610723565b91505060208301516107ac602086018261075c565b5060408301516107bf604086018261075c565b5060608301516107d2606086018261075c565b5060808301516107e5608086018261076b565b508091505092915050565b6000602082019050818103600083015261080a818461077a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085957607f821691505b60208210810361086c5761086b610812565b5b50919050565b600081905092915050565b6000610888826105fd565b6108928185610872565b93506108a2818560208601610619565b80840191505092915050565b60006108ba828461087d565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109277fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108ea565b61093186836108ea565b95508019841693508086168417925050509392505050565b6000819050919050565b600061096e6109696109648461067c565b610949565b61067c565b9050919050565b6000819050919050565b61098883610953565b61099c61099482610975565b8484546108f7565b825550505050565b600090565b6109b16109a4565b6109bc81848461097f565b505050565b5b818110156109e0576109d56000826109a9565b6001810190506109c2565b5050565b601f821115610a25576109f6816108c5565b6109ff846108da565b81016020851015610a0e578190505b610a22610a1a856108da565b8301826109c1565b50505b505050565b600082821c905092915050565b6000610a4860001984600802610a2a565b1980831691505092915050565b6000610a618383610a37565b9150826002028217905092915050565b610a7a826105fd565b67ffffffffffffffff811115610a9357610a92610489565b5b610a9d8254610841565b610aa88282856109e4565b600060209050601f831160018114610adb5760008415610ac9578287015190505b610ad38582610a55565b865550610b3b565b601f198416610ae9866108c5565b60005b82811015610b1157848901518255600182019150602085019450602081019050610aec565b86831015610b2e5784890151610b2a601f891682610a37565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220f093d946b73b5fa6feb3f5688d8bbaf5ce8e5eba4700f8e6f2a2eaac716e0a7864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "confirmBenificiaryAddress()": {
        "returns": {
          "_0": "bool"
        }
      },
      "getMinerInfo(string)": {
        "params": {
          "minerID": "address of the miner"
        },
        "returns": {
          "_0": "minerInfo"
        }
      },
      "mockGenerateMinerInfo(string)": {
        "params": {
          "_minorId": "address of the miner"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "confirmBenificiaryAddress()": {
        "notice": "Verifies the minor benificiary"
      },
      "getMinerInfo(string)": {
        "notice": "Gets the miner info"
      },
      "mockGenerateMinerInfo(string)": {
        "notice": "Mocks the miner info"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1424,
        "contract": "contracts/mocks/QueryAPI.sol:QueryAPI",
        "label": "minerInfoMap",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(minerInfo)1435_storage)"
      }
    ],
    "types": {
      "t_mapping(t_string_memory_ptr,t_struct(minerInfo)1435_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct QueryAPI.minerInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(minerInfo)1435_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(minerInfo)1435_storage": {
        "encoding": "inplace",
        "label": "struct QueryAPI.minerInfo",
        "members": [
          {
            "astId": 1426,
            "contract": "contracts/mocks/QueryAPI.sol:QueryAPI",
            "label": "minerId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1428,
            "contract": "contracts/mocks/QueryAPI.sol:QueryAPI",
            "label": "availableBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1430,
            "contract": "contracts/mocks/QueryAPI.sol:QueryAPI",
            "label": "initialPledge",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1432,
            "contract": "contracts/mocks/QueryAPI.sol:QueryAPI",
            "label": "vestingFunds",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1434,
            "contract": "contracts/mocks/QueryAPI.sol:QueryAPI",
            "label": "sector_size",
            "offset": 0,
            "slot": "4",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}